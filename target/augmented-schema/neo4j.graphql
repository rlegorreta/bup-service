schema {
  query: Query
  mutation: Mutation
}

directive @cypher(
    """
     if true, passes the sole responsibility for the nested query result for the field to your Cypher query.
     You will have to provide all data/structure required by client queries.
     Otherwise, we assume if you return object-types that you will return the appropriate nodes from your statement.
    """
    passThrough: Boolean = false,
    """
     Arguments on the field are passed to the Cypher statement and can be used by name.
     They must not be prefixed by `$` since they are no longer parameters.
     Just use the same name as the fields' argument.
     The current node is passed to the statement as `this`.
     The statement should contain exactly one return expression without any alias.
     Input types are supported, they appear as `Map` type in your Cypher statement.
    """
    statement: String
  ) on FIELD_DEFINITION

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

directive @dynamic(prefix: String = "properties.") on FIELD_DEFINITION

directive @ignore on FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

directive @property(name: String) on FIELD_DEFINITION

directive @relation(direction: RelationDirection = OUT, from: String = "from", name: String, to: String = "to") on OBJECT | FIELD_DEFINITION

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Area {
  _id: ID!
  compania: Compania @relation(direction : IN, from : "from", name : "CONTIENE", to : "to")
  companias(filter: _CompaniaFilter, options: CompaniaOptions): [Compania] @relation(direction : IN, from : "from", name : "CONTIENE", to : "to")
  nombre: String!
}

type Codigo {
  _id: ID!
  cp: Int
  estado: Estado @relation(direction : OUT, from : "from", name : "PERTENECE", to : "to")
}

type Compania {
  _id: ID!
  areas(filter: _AreaFilter, options: AreaOptions): [Area] @relation(direction : OUT, from : "from", name : "CONTIENE", to : "to")
  direcciones(filter: _DireccionFilter, options: DireccionOptions): [Direccion] @relation(direction : OUT, from : "from", name : "DIRECCION", to : "to")
  fechaModificacion: LocalDateTime
  nombre: String!
  proveedorDel: Compania @relation(direction : OUT, from : "from", name : "PROVEEDOR", to : "to")
  proveedores(filter: _ProveedorFilter, options: ProveedorOptions): [Proveedor]
  sector: Sector @relation(direction : OUT, from : "from", name : "PERTENECE", to : "to")
  subsidiaria: Compania @relation(direction : IN, from : "from", name : "SUBSIDIARIA", to : "to")
  subsidiarias(filter: _CompaniaFilter, options: CompaniaOptions): [Compania] @relation(direction : IN, from : "from", name : "SUBSIDIARIA", to : "to")
  telefonos(filter: _TelefonoFilter, options: TelefonoOptions): [Telefono] @relation(direction : OUT, from : "from", name : "TELEFONO", to : "to")
  usuarioModificacion: String
}

type Direccion {
  _id: ID!
  calle: String!
  ciudad: String
  codigo: Codigo @relation(direction : OUT, from : "from", name : "CODIGO", to : "to")
  compania: Compania @relation(direction : IN, from : "from", name : "DIRECCION", to : "to")
  municipio: Municipio @relation(direction : OUT, from : "from", name : "SE_ENCUENTRA", to : "to")
  persona: Persona @relation(direction : IN, from : "from", name : "DIRECCION", to : "to")
  tipo: String!
}

type Dirige @relation(direction : OUT, from : "from", name : "DIRIGE", to : "to") {
  from: Persona
  idCompania: Int!
  nombreCompania: String!
  to: Area
}

type Email {
  _id: ID!
  emails(filter: _EmailAsignadoFilter, options: EmailAsignadoOptions): [EmailAsignado]
  uri: String!
}

type EmailAsignado @relation(direction : OUT, from : "from", name : "EMAIL", to : "to") {
  email: String!
  from: Persona
  to: Email
}

type Estado {
  _id: ID!
  nombre: String!
  pais: String!
}

type Municipio {
  _id: ID!
  codigo: Codigo @relation(direction : OUT, from : "from", name : "PERTENECE", to : "to")
  codigos(filter: _CodigoFilter, options: CodigoOptions): [Codigo] @relation(direction : OUT, from : "from", name : "PERTENECE", to : "to")
  nombre: String!
}

type Mutation {
  addAreaCompania(_id: ID!, compania: ID!): Area!
  addAreaCompanias(_id: ID!, companias: [ID!]!): Area!
  addCodigoEstado(_id: ID!, estado: ID!): Codigo!
  addCompaniaAreas(_id: ID!, areas: [ID!]!): Compania!
  addCompaniaDirecciones(_id: ID!, direcciones: [ID!]!): Compania!
  addCompaniaProveedorDel(_id: ID!, proveedorDel: ID!, tipo: String!): Compania!
  addCompaniaSector(_id: ID!, sector: ID!): Compania!
  addCompaniaSubsidiaria(_id: ID!, subsidiaria: ID!): Compania!
  addCompaniaSubsidiarias(_id: ID!, subsidiarias: [ID!]!): Compania!
  addCompaniaTelefonos(_id: ID!, telefonos: [ID!]!): Compania!
  addDireccionCodigo(_id: ID!, codigo: ID!): Direccion!
  addDireccionCompania(_id: ID!, compania: ID!): Direccion!
  addDireccionMunicipio(_id: ID!, municipio: ID!): Direccion!
  addDireccionPersona(_id: ID!, persona: ID!): Direccion!
  addMunicipioCodigo(_id: ID!, codigo: ID!): Municipio!
  addMunicipioCodigos(_id: ID!, codigos: [ID!]!): Municipio!
  addPersonaDirecciones(_id: ID!, direcciones: [ID!]!): Persona!
  addPersonaDirigeDel(_id: ID!, dirigeDel: ID!, idCompania: Int!, nombreCompania: String!): Persona!
  addPersonaEmailDel(_id: ID!, email: String!, emailDel: ID!): Persona!
  addPersonaRelacionDel(_id: ID!, nombre: String!, relacionDel: ID!, tipo: String!): Persona!
  addPersonaTelefonos(_id: ID!, telefonos: [ID!]!): Persona!
  addPersonaTrabajaDel(_id: ID!, puesto: String!, trabajaDel: ID!): Persona!
  addSectorCompanias(_id: ID!, companias: [ID!]!): Sector!
  addTelefonoCompania(_id: ID!, compania: ID!): Telefono!
  addTelefonoCompanias(_id: ID!, companias: [ID!]!): Telefono!
  addTelefonoPersona(_id: ID!, persona: ID!): Telefono!
  addTelefonoPersonas(_id: ID!, personas: [ID!]!): Telefono!
  createArea(nombre: String!): Area!
  createCodigo(cp: Int): Codigo!
  createCompania(fechaModificacion: LocalDateTime, nombre: String!, usuarioModificacion: String): Compania!
  createDireccion(calle: String!, ciudad: String, tipo: String!): Direccion!
  createDirige(from__id: ID!, idCompania: Int!, nombreCompania: String!, to__id: ID!): Dirige!
  createEmail(uri: String!): Email!
  createEmailAsignado(email: String!, from__id: ID!, to__id: ID!): EmailAsignado!
  createEstado(nombre: String!, pais: String!): Estado!
  createMunicipio(nombre: String!): Municipio!
  createPais(nombre: String!): Pais!
  createPersona(activo: Boolean!, apellidoMaterno: String!, apellidoPaterno: String!, estadoCivil: String!, fechaModificacion: LocalDateTime, fechaNacimiento: LocalDate, genero: String!, idPersona: Int, nombre: String!, usuarioModificacion: String): Persona!
  createProveedor(from__id: ID!, tipo: String!, to__id: ID!): Proveedor!
  createRelacion(from__id: ID!, nombre: String!, tipo: String!, to__id: ID!): Relacion!
  createSector(fechaModificacion: LocalDateTime, nombre: String!, usuarioModificacion: String): Sector!
  createTelefono(ciudad: String!, numero: String!, tipo: String!): Telefono!
  createTrabaja(from__id: ID!, puesto: String!, to__id: ID!): Trabaja!
  "Deletes Area and returns the type itself"
  deleteArea(_id: ID!): Area
  deleteAreaCompania(_id: ID!, compania: ID!): Area
  deleteAreaCompanias(_id: ID!, companias: [ID!]!): Area
  "Deletes Codigo and returns the type itself"
  deleteCodigo(_id: ID!): Codigo
  deleteCodigoEstado(_id: ID!, estado: ID!): Codigo
  "Deletes Compania and returns the type itself"
  deleteCompania(_id: ID!): Compania
  deleteCompaniaAreas(_id: ID!, areas: [ID!]!): Compania
  deleteCompaniaDirecciones(_id: ID!, direcciones: [ID!]!): Compania
  deleteCompaniaProveedorDel(_id: ID!, proveedorDel: ID!): Compania
  deleteCompaniaSector(_id: ID!, sector: ID!): Compania
  deleteCompaniaSubsidiaria(_id: ID!, subsidiaria: ID!): Compania
  deleteCompaniaSubsidiarias(_id: ID!, subsidiarias: [ID!]!): Compania
  deleteCompaniaTelefonos(_id: ID!, telefonos: [ID!]!): Compania
  "Deletes Direccion and returns the type itself"
  deleteDireccion(_id: ID!): Direccion
  deleteDireccionCodigo(_id: ID!, codigo: ID!): Direccion
  deleteDireccionCompania(_id: ID!, compania: ID!): Direccion
  deleteDireccionMunicipio(_id: ID!, municipio: ID!): Direccion
  deleteDireccionPersona(_id: ID!, persona: ID!): Direccion
  "Deletes Email and returns the type itself"
  deleteEmail(_id: ID!): Email
  "Deletes Estado and returns the type itself"
  deleteEstado(_id: ID!): Estado
  "Deletes Municipio and returns the type itself"
  deleteMunicipio(_id: ID!): Municipio
  deleteMunicipioCodigo(_id: ID!, codigo: ID!): Municipio
  deleteMunicipioCodigos(_id: ID!, codigos: [ID!]!): Municipio
  "Deletes Pais and returns the type itself"
  deletePais(_id: ID!): Pais
  "Deletes Persona and returns the type itself"
  deletePersona(_id: ID!): Persona
  deletePersonaDirecciones(_id: ID!, direcciones: [ID!]!): Persona
  deletePersonaDirigeDel(_id: ID!, dirigeDel: ID!): Persona
  deletePersonaEmailDel(_id: ID!, emailDel: ID!): Persona
  deletePersonaRelacionDel(_id: ID!, relacionDel: ID!): Persona
  deletePersonaTelefonos(_id: ID!, telefonos: [ID!]!): Persona
  deletePersonaTrabajaDel(_id: ID!, trabajaDel: ID!): Persona
  "Deletes Sector and returns the type itself"
  deleteSector(_id: ID!): Sector
  deleteSectorCompanias(_id: ID!, companias: [ID!]!): Sector
  "Deletes Telefono and returns the type itself"
  deleteTelefono(_id: ID!): Telefono
  deleteTelefonoCompania(_id: ID!, compania: ID!): Telefono
  deleteTelefonoCompanias(_id: ID!, companias: [ID!]!): Telefono
  deleteTelefonoPersona(_id: ID!, persona: ID!): Telefono
  deleteTelefonoPersonas(_id: ID!, personas: [ID!]!): Telefono
  mergeArea(_id: ID!, nombre: String): Area!
  mergeCodigo(_id: ID!, cp: Int): Codigo!
  mergeCompania(_id: ID!, fechaModificacion: LocalDateTime, nombre: String, usuarioModificacion: String): Compania!
  mergeDireccion(_id: ID!, calle: String, ciudad: String, tipo: String): Direccion!
  mergeEmail(_id: ID!, uri: String): Email!
  mergeEstado(_id: ID!, nombre: String, pais: String): Estado!
  mergeMunicipio(_id: ID!, nombre: String): Municipio!
  mergePais(_id: ID!, nombre: String): Pais!
  mergePersona(_id: ID!, activo: Boolean, apellidoMaterno: String, apellidoPaterno: String, estadoCivil: String, fechaModificacion: LocalDateTime, fechaNacimiento: LocalDate, genero: String, idPersona: Int, nombre: String, usuarioModificacion: String): Persona!
  mergeSector(_id: ID!, fechaModificacion: LocalDateTime, nombre: String, usuarioModificacion: String): Sector!
  mergeTelefono(_id: ID!, ciudad: String, numero: String, tipo: String): Telefono!
  updateArea(_id: ID!, nombre: String): Area
  updateCodigo(_id: ID!, cp: Int): Codigo
  updateCompania(_id: ID!, fechaModificacion: LocalDateTime, nombre: String, usuarioModificacion: String): Compania
  updateDireccion(_id: ID!, calle: String, ciudad: String, tipo: String): Direccion
  updateEmail(_id: ID!, uri: String): Email
  updateEstado(_id: ID!, nombre: String, pais: String): Estado
  updateMunicipio(_id: ID!, nombre: String): Municipio
  updatePais(_id: ID!, nombre: String): Pais
  updatePersona(_id: ID!, activo: Boolean, apellidoMaterno: String, apellidoPaterno: String, estadoCivil: String, fechaModificacion: LocalDateTime, fechaNacimiento: LocalDate, genero: String, idPersona: Int, nombre: String, usuarioModificacion: String): Persona
  updateSector(_id: ID!, fechaModificacion: LocalDateTime, nombre: String, usuarioModificacion: String): Sector
  updateTelefono(_id: ID!, ciudad: String, numero: String, tipo: String): Telefono
}

type Pais {
  _id: ID!
  nombre: String!
}

type Persona {
  _id: ID!
  activo: Boolean!
  apellidoMaterno: String!
  apellidoPaterno: String!
  direcciones(filter: _DireccionFilter, options: DireccionOptions): [Direccion] @relation(direction : OUT, from : "from", name : "DIRECCION", to : "to")
  dirige(filter: _DirigeFilter, options: DirigeOptions): [Dirige]
  dirigeDel: Area @relation(direction : OUT, from : "from", name : "DIRIGE", to : "to")
  emailDel: Email @relation(direction : OUT, from : "from", name : "EMAIL", to : "to")
  emails(filter: _EmailAsignadoFilter, options: EmailAsignadoOptions): [EmailAsignado]
  estadoCivil: String!
  fechaModificacion: LocalDateTime
  fechaNacimiento: LocalDate
  genero: String!
  idPersona: Int
  nombre: String!
  relacionDel: Persona @relation(direction : OUT, from : "from", name : "RELACION", to : "to")
  relaciones(filter: _RelacionFilter, options: RelacionOptions): [Relacion]
  telefonos(filter: _TelefonoFilter, options: TelefonoOptions): [Telefono] @relation(direction : OUT, from : "from", name : "TELEFONO", to : "to")
  trabaja(filter: _TrabajaFilter, options: TrabajaOptions): [Trabaja]
  trabajaDel: Compania @relation(direction : OUT, from : "from", name : "TRABAJA", to : "to")
  usuarioModificacion: String
}

type Proveedor @relation(direction : OUT, from : "from", name : "PROVEEDOR", to : "to") {
  from: Compania
  tipo: String!
  to: Compania
}

type Query {
  areas(_id: ID, filter: _AreaFilter, nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: AreaOptions): [Area!]!
  codigoes(_id: ID, cp: Int, cp_gt: Int, cp_gte: Int, cp_in: [Int!], cp_lt: Int, cp_lte: Int, cp_not: Int, cp_not_in: [Int!], filter: _CodigoFilter, options: CodigoOptions): [Codigo!]!
  companias(_id: ID, fechaModificacion: LocalDateTime, fechaModificacion_gt: LocalDateTime, fechaModificacion_gte: LocalDateTime, fechaModificacion_in: [LocalDateTime!], fechaModificacion_lt: LocalDateTime, fechaModificacion_lte: LocalDateTime, fechaModificacion_not: LocalDateTime, fechaModificacion_not_in: [LocalDateTime!], filter: _CompaniaFilter, nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: CompaniaOptions, usuarioModificacion: String, usuarioModificacion_contains: String, usuarioModificacion_ends_with: String, usuarioModificacion_gt: String, usuarioModificacion_gte: String, usuarioModificacion_in: [String!], usuarioModificacion_lt: String, usuarioModificacion_lte: String, usuarioModificacion_matches: String, usuarioModificacion_not: String, usuarioModificacion_not_contains: String, usuarioModificacion_not_ends_with: String, usuarioModificacion_not_in: [String!], usuarioModificacion_not_starts_with: String, usuarioModificacion_starts_with: String): [Compania!]!
  direccions(_id: ID, calle: String, calle_contains: String, calle_ends_with: String, calle_gt: String, calle_gte: String, calle_in: [String!], calle_lt: String, calle_lte: String, calle_matches: String, calle_not: String, calle_not_contains: String, calle_not_ends_with: String, calle_not_in: [String!], calle_not_starts_with: String, calle_starts_with: String, ciudad: String, ciudad_contains: String, ciudad_ends_with: String, ciudad_gt: String, ciudad_gte: String, ciudad_in: [String!], ciudad_lt: String, ciudad_lte: String, ciudad_matches: String, ciudad_not: String, ciudad_not_contains: String, ciudad_not_ends_with: String, ciudad_not_in: [String!], ciudad_not_starts_with: String, ciudad_starts_with: String, filter: _DireccionFilter, options: DireccionOptions, tipo: String, tipo_contains: String, tipo_ends_with: String, tipo_gt: String, tipo_gte: String, tipo_in: [String!], tipo_lt: String, tipo_lte: String, tipo_matches: String, tipo_not: String, tipo_not_contains: String, tipo_not_ends_with: String, tipo_not_in: [String!], tipo_not_starts_with: String, tipo_starts_with: String): [Direccion!]!
  diriges(filter: _DirigeFilter, idCompania: Int, idCompania_gt: Int, idCompania_gte: Int, idCompania_in: [Int!], idCompania_lt: Int, idCompania_lte: Int, idCompania_not: Int, idCompania_not_in: [Int!], nombreCompania: String, nombreCompania_contains: String, nombreCompania_ends_with: String, nombreCompania_gt: String, nombreCompania_gte: String, nombreCompania_in: [String!], nombreCompania_lt: String, nombreCompania_lte: String, nombreCompania_matches: String, nombreCompania_not: String, nombreCompania_not_contains: String, nombreCompania_not_ends_with: String, nombreCompania_not_in: [String!], nombreCompania_not_starts_with: String, nombreCompania_starts_with: String, options: DirigeOptions): [Dirige!]!
  emailAsignadoes(email: String, email_contains: String, email_ends_with: String, email_gt: String, email_gte: String, email_in: [String!], email_lt: String, email_lte: String, email_matches: String, email_not: String, email_not_contains: String, email_not_ends_with: String, email_not_in: [String!], email_not_starts_with: String, email_starts_with: String, filter: _EmailAsignadoFilter, options: EmailAsignadoOptions): [EmailAsignado!]!
  emails(_id: ID, filter: _EmailFilter, options: EmailOptions, uri: String, uri_contains: String, uri_ends_with: String, uri_gt: String, uri_gte: String, uri_in: [String!], uri_lt: String, uri_lte: String, uri_matches: String, uri_not: String, uri_not_contains: String, uri_not_ends_with: String, uri_not_in: [String!], uri_not_starts_with: String, uri_starts_with: String): [Email!]!
  estadoes(_id: ID, filter: _EstadoFilter, nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: EstadoOptions, pais: String, pais_contains: String, pais_ends_with: String, pais_gt: String, pais_gte: String, pais_in: [String!], pais_lt: String, pais_lte: String, pais_matches: String, pais_not: String, pais_not_contains: String, pais_not_ends_with: String, pais_not_in: [String!], pais_not_starts_with: String, pais_starts_with: String): [Estado!]!
  municipios(_id: ID, filter: _MunicipioFilter, nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: MunicipioOptions): [Municipio!]!
  paises(_id: ID, filter: _PaisFilter, nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: PaisOptions): [Pais!]!
  personae(_id: ID, activo: Boolean, activo_not: Boolean, apellidoMaterno: String, apellidoMaterno_contains: String, apellidoMaterno_ends_with: String, apellidoMaterno_gt: String, apellidoMaterno_gte: String, apellidoMaterno_in: [String!], apellidoMaterno_lt: String, apellidoMaterno_lte: String, apellidoMaterno_matches: String, apellidoMaterno_not: String, apellidoMaterno_not_contains: String, apellidoMaterno_not_ends_with: String, apellidoMaterno_not_in: [String!], apellidoMaterno_not_starts_with: String, apellidoMaterno_starts_with: String, apellidoPaterno: String, apellidoPaterno_contains: String, apellidoPaterno_ends_with: String, apellidoPaterno_gt: String, apellidoPaterno_gte: String, apellidoPaterno_in: [String!], apellidoPaterno_lt: String, apellidoPaterno_lte: String, apellidoPaterno_matches: String, apellidoPaterno_not: String, apellidoPaterno_not_contains: String, apellidoPaterno_not_ends_with: String, apellidoPaterno_not_in: [String!], apellidoPaterno_not_starts_with: String, apellidoPaterno_starts_with: String, estadoCivil: String, estadoCivil_contains: String, estadoCivil_ends_with: String, estadoCivil_gt: String, estadoCivil_gte: String, estadoCivil_in: [String!], estadoCivil_lt: String, estadoCivil_lte: String, estadoCivil_matches: String, estadoCivil_not: String, estadoCivil_not_contains: String, estadoCivil_not_ends_with: String, estadoCivil_not_in: [String!], estadoCivil_not_starts_with: String, estadoCivil_starts_with: String, fechaModificacion: LocalDateTime, fechaModificacion_gt: LocalDateTime, fechaModificacion_gte: LocalDateTime, fechaModificacion_in: [LocalDateTime!], fechaModificacion_lt: LocalDateTime, fechaModificacion_lte: LocalDateTime, fechaModificacion_not: LocalDateTime, fechaModificacion_not_in: [LocalDateTime!], fechaNacimiento: LocalDate, fechaNacimiento_gt: LocalDate, fechaNacimiento_gte: LocalDate, fechaNacimiento_in: [LocalDate!], fechaNacimiento_lt: LocalDate, fechaNacimiento_lte: LocalDate, fechaNacimiento_not: LocalDate, fechaNacimiento_not_in: [LocalDate!], filter: _PersonaFilter, genero: String, genero_contains: String, genero_ends_with: String, genero_gt: String, genero_gte: String, genero_in: [String!], genero_lt: String, genero_lte: String, genero_matches: String, genero_not: String, genero_not_contains: String, genero_not_ends_with: String, genero_not_in: [String!], genero_not_starts_with: String, genero_starts_with: String, idPersona: Int, idPersona_gt: Int, idPersona_gte: Int, idPersona_in: [Int!], idPersona_lt: Int, idPersona_lte: Int, idPersona_not: Int, idPersona_not_in: [Int!], nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: PersonaOptions, usuarioModificacion: String, usuarioModificacion_contains: String, usuarioModificacion_ends_with: String, usuarioModificacion_gt: String, usuarioModificacion_gte: String, usuarioModificacion_in: [String!], usuarioModificacion_lt: String, usuarioModificacion_lte: String, usuarioModificacion_matches: String, usuarioModificacion_not: String, usuarioModificacion_not_contains: String, usuarioModificacion_not_ends_with: String, usuarioModificacion_not_in: [String!], usuarioModificacion_not_starts_with: String, usuarioModificacion_starts_with: String): [Persona!]!
  proveedors(filter: _ProveedorFilter, options: ProveedorOptions, tipo: String, tipo_contains: String, tipo_ends_with: String, tipo_gt: String, tipo_gte: String, tipo_in: [String!], tipo_lt: String, tipo_lte: String, tipo_matches: String, tipo_not: String, tipo_not_contains: String, tipo_not_ends_with: String, tipo_not_in: [String!], tipo_not_starts_with: String, tipo_starts_with: String): [Proveedor!]!
  relacions(filter: _RelacionFilter, nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: RelacionOptions, tipo: String, tipo_contains: String, tipo_ends_with: String, tipo_gt: String, tipo_gte: String, tipo_in: [String!], tipo_lt: String, tipo_lte: String, tipo_matches: String, tipo_not: String, tipo_not_contains: String, tipo_not_ends_with: String, tipo_not_in: [String!], tipo_not_starts_with: String, tipo_starts_with: String): [Relacion!]!
  sectors(_id: ID, fechaModificacion: LocalDateTime, fechaModificacion_gt: LocalDateTime, fechaModificacion_gte: LocalDateTime, fechaModificacion_in: [LocalDateTime!], fechaModificacion_lt: LocalDateTime, fechaModificacion_lte: LocalDateTime, fechaModificacion_not: LocalDateTime, fechaModificacion_not_in: [LocalDateTime!], filter: _SectorFilter, nombre: String, nombre_contains: String, nombre_ends_with: String, nombre_gt: String, nombre_gte: String, nombre_in: [String!], nombre_lt: String, nombre_lte: String, nombre_matches: String, nombre_not: String, nombre_not_contains: String, nombre_not_ends_with: String, nombre_not_in: [String!], nombre_not_starts_with: String, nombre_starts_with: String, options: SectorOptions, usuarioModificacion: String, usuarioModificacion_contains: String, usuarioModificacion_ends_with: String, usuarioModificacion_gt: String, usuarioModificacion_gte: String, usuarioModificacion_in: [String!], usuarioModificacion_lt: String, usuarioModificacion_lte: String, usuarioModificacion_matches: String, usuarioModificacion_not: String, usuarioModificacion_not_contains: String, usuarioModificacion_not_ends_with: String, usuarioModificacion_not_in: [String!], usuarioModificacion_not_starts_with: String, usuarioModificacion_starts_with: String): [Sector!]!
  telefonoes(_id: ID, ciudad: String, ciudad_contains: String, ciudad_ends_with: String, ciudad_gt: String, ciudad_gte: String, ciudad_in: [String!], ciudad_lt: String, ciudad_lte: String, ciudad_matches: String, ciudad_not: String, ciudad_not_contains: String, ciudad_not_ends_with: String, ciudad_not_in: [String!], ciudad_not_starts_with: String, ciudad_starts_with: String, filter: _TelefonoFilter, numero: String, numero_contains: String, numero_ends_with: String, numero_gt: String, numero_gte: String, numero_in: [String!], numero_lt: String, numero_lte: String, numero_matches: String, numero_not: String, numero_not_contains: String, numero_not_ends_with: String, numero_not_in: [String!], numero_not_starts_with: String, numero_starts_with: String, options: TelefonoOptions, tipo: String, tipo_contains: String, tipo_ends_with: String, tipo_gt: String, tipo_gte: String, tipo_in: [String!], tipo_lt: String, tipo_lte: String, tipo_matches: String, tipo_not: String, tipo_not_contains: String, tipo_not_ends_with: String, tipo_not_in: [String!], tipo_not_starts_with: String, tipo_starts_with: String): [Telefono!]!
  trabajas(filter: _TrabajaFilter, options: TrabajaOptions, puesto: String, puesto_contains: String, puesto_ends_with: String, puesto_gt: String, puesto_gte: String, puesto_in: [String!], puesto_lt: String, puesto_lte: String, puesto_matches: String, puesto_not: String, puesto_not_contains: String, puesto_not_ends_with: String, puesto_not_in: [String!], puesto_not_starts_with: String, puesto_starts_with: String): [Trabaja!]!
}

type Relacion @relation(direction : OUT, from : "from", name : "RELACION", to : "to") {
  from: Persona
  nombre: String!
  tipo: String!
  to: Persona
}

type Sector {
  _id: ID!
  companias(filter: _CompaniaFilter, options: CompaniaOptions): [Compania] @relation(direction : IN, from : "from", name : "PERTENECE", to : "to")
  fechaModificacion: LocalDateTime
  nombre: String!
  usuarioModificacion: String
}

type Telefono {
  _id: ID!
  ciudad: String!
  compania: Compania @relation(direction : IN, from : "from", name : "TELEFONO", to : "to")
  companias(filter: _CompaniaFilter, options: CompaniaOptions): [Compania] @relation(direction : IN, from : "from", name : "TELEFONO", to : "to")
  numero: String!
  persona: Persona @relation(direction : IN, from : "from", name : "TELEFONO", to : "to")
  personas(filter: _PersonaFilter, options: PersonaOptions): [Persona] @relation(direction : IN, from : "from", name : "TELEFONO", to : "to")
  tipo: String!
}

type Trabaja @relation(direction : OUT, from : "from", name : "TRABAJA", to : "to") {
  from: Persona
  puesto: String!
  to: Compania
}

enum RelationDirection {
  BOTH
  IN
  OUT
}

enum SortDirection {
  "Sort by field values in ascending order."
  ASC
  "Sort by field values in descending order."
  DESC
}

"Scalar LocalDate"
scalar LocalDate

"Scalar LocalDateTime"
scalar LocalDateTime

input AreaOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more AreaSort objects to sort Areas by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [AreaSort!]
}

"Fields to sort Areas by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input AreaSort {
  _id: SortDirection
  nombre: SortDirection
}

input CodigoOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more CodigoSort objects to sort Codigoes by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [CodigoSort!]
}

"Fields to sort Codigos by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input CodigoSort {
  _id: SortDirection
  cp: SortDirection
}

input CompaniaOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more CompaniaSort objects to sort Companias by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [CompaniaSort!]
}

"Fields to sort Companias by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input CompaniaSort {
  _id: SortDirection
  fechaModificacion: SortDirection
  nombre: SortDirection
  usuarioModificacion: SortDirection
}

input DireccionOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more DireccionSort objects to sort Direccions by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [DireccionSort!]
}

"Fields to sort Direccions by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input DireccionSort {
  _id: SortDirection
  calle: SortDirection
  ciudad: SortDirection
  tipo: SortDirection
}

input DirigeOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more DirigeSort objects to sort Diriges by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [DirigeSort!]
}

"Fields to sort Diriges by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input DirigeSort {
  idCompania: SortDirection
  nombreCompania: SortDirection
}

input EmailAsignadoOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more EmailAsignadoSort objects to sort EmailAsignadoes by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [EmailAsignadoSort!]
}

"Fields to sort EmailAsignados by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input EmailAsignadoSort {
  email: SortDirection
}

input EmailOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more EmailSort objects to sort Emails by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [EmailSort!]
}

"Fields to sort Emails by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input EmailSort {
  _id: SortDirection
  uri: SortDirection
}

input EstadoOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more EstadoSort objects to sort Estadoes by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [EstadoSort!]
}

"Fields to sort Estados by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input EstadoSort {
  _id: SortDirection
  nombre: SortDirection
  pais: SortDirection
}

input MunicipioOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more MunicipioSort objects to sort Municipios by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [MunicipioSort!]
}

"Fields to sort Municipios by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input MunicipioSort {
  _id: SortDirection
  nombre: SortDirection
}

input PaisOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more PaisSort objects to sort Paises by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [PaisSort!]
}

"Fields to sort Paiss by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input PaisSort {
  _id: SortDirection
  nombre: SortDirection
}

input PersonaOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more PersonaSort objects to sort Personae by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [PersonaSort!]
}

"Fields to sort Personas by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input PersonaSort {
  _id: SortDirection
  activo: SortDirection
  apellidoMaterno: SortDirection
  apellidoPaterno: SortDirection
  estadoCivil: SortDirection
  fechaModificacion: SortDirection
  fechaNacimiento: SortDirection
  genero: SortDirection
  idPersona: SortDirection
  nombre: SortDirection
  usuarioModificacion: SortDirection
}

input ProveedorOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more ProveedorSort objects to sort Proveedors by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [ProveedorSort!]
}

"Fields to sort Proveedors by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input ProveedorSort {
  tipo: SortDirection
}

input RelacionOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more RelacionSort objects to sort Relacions by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [RelacionSort!]
}

"Fields to sort Relacions by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input RelacionSort {
  nombre: SortDirection
  tipo: SortDirection
}

input SectorOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more SectorSort objects to sort Sectors by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [SectorSort!]
}

"Fields to sort Sectors by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input SectorSort {
  _id: SortDirection
  fechaModificacion: SortDirection
  nombre: SortDirection
  usuarioModificacion: SortDirection
}

input TelefonoOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more TelefonoSort objects to sort Telefonoes by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [TelefonoSort!]
}

"Fields to sort Telefonos by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input TelefonoSort {
  _id: SortDirection
  ciudad: SortDirection
  numero: SortDirection
  tipo: SortDirection
}

input TrabajaOptions {
  "Defines the maximum amount of records returned"
  limit: Int
  "Defines the amount of records to be skipped"
  skip: Int
  "Specify one or more TrabajaSort objects to sort Trabajas by. The sorts will be applied in the order in which they are arranged in the array."
  sort: [TrabajaSort!]
}

"Fields to sort Trabajas by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object."
input TrabajaSort {
  puesto: SortDirection
}

input _AreaFilter {
  AND: [_AreaFilter!]
  NOT: [_AreaFilter!]
  OR: [_AreaFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  "Filters only those `Area` for which the `compania`-relationship matches this filter. If `null` is passed to this field, only those `Area` will be filtered which has no `compania`-relations"
  compania: _CompaniaFilter
  "@deprecated Use the `compania_not`-field"
  compania_none: _CompaniaFilter
  "Filters only those `Area` for which the `compania`-relationship does not match this filter. If `null` is passed to this field, only those `Area` will be filtered which has any `compania`-relation"
  compania_not: _CompaniaFilter
  "@deprecated Use the `compania`-field directly (without any suffix)"
  compania_single: _CompaniaFilter
  "@deprecated Use the `compania`-field directly (without any suffix)"
  compania_some: _CompaniaFilter
  "Filters only those `Area` for which all `companias`-relationship matches this filter. If `null` is passed to this field, only those `Area` will be filtered which has no `companias`-relations"
  companias: _CompaniaFilter
  "Filters only those `Area` for which all `companias`-relationships matches this filter"
  companias_every: _CompaniaFilter
  "Filters only those `Area` for which none of the `companias`-relationships matches this filter"
  companias_none: _CompaniaFilter
  "Filters only those `Area` for which all `companias`-relationship does not match this filter. If `null` is passed to this field, only those `Area` will be filtered which has any `companias`-relation"
  companias_not: _CompaniaFilter
  "Filters only those `Area` for which exactly one `companias`-relationship matches this filter"
  companias_single: _CompaniaFilter
  "Filters only those `Area` for which at least one `companias`-relationship matches this filter"
  companias_some: _CompaniaFilter
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
}

input _CodigoFilter {
  AND: [_CodigoFilter!]
  NOT: [_CodigoFilter!]
  OR: [_CodigoFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  cp: Int
  cp_gt: Int
  cp_gte: Int
  cp_in: [Int]
  cp_lt: Int
  cp_lte: Int
  cp_not: Int
  cp_not_in: [Int]
  "Filters only those `Codigo` for which the `estado`-relationship matches this filter. If `null` is passed to this field, only those `Codigo` will be filtered which has no `estado`-relations"
  estado: _EstadoFilter
  "@deprecated Use the `estado_not`-field"
  estado_none: _EstadoFilter
  "Filters only those `Codigo` for which the `estado`-relationship does not match this filter. If `null` is passed to this field, only those `Codigo` will be filtered which has any `estado`-relation"
  estado_not: _EstadoFilter
  "@deprecated Use the `estado`-field directly (without any suffix)"
  estado_single: _EstadoFilter
  "@deprecated Use the `estado`-field directly (without any suffix)"
  estado_some: _EstadoFilter
}

input _CompaniaFilter {
  AND: [_CompaniaFilter!]
  NOT: [_CompaniaFilter!]
  OR: [_CompaniaFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  "Filters only those `Compania` for which all `areas`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `areas`-relations"
  areas: _AreaFilter
  "Filters only those `Compania` for which all `areas`-relationships matches this filter"
  areas_every: _AreaFilter
  "Filters only those `Compania` for which none of the `areas`-relationships matches this filter"
  areas_none: _AreaFilter
  "Filters only those `Compania` for which all `areas`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `areas`-relation"
  areas_not: _AreaFilter
  "Filters only those `Compania` for which exactly one `areas`-relationship matches this filter"
  areas_single: _AreaFilter
  "Filters only those `Compania` for which at least one `areas`-relationship matches this filter"
  areas_some: _AreaFilter
  "Filters only those `Compania` for which all `direcciones`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `direcciones`-relations"
  direcciones: _DireccionFilter
  "Filters only those `Compania` for which all `direcciones`-relationships matches this filter"
  direcciones_every: _DireccionFilter
  "Filters only those `Compania` for which none of the `direcciones`-relationships matches this filter"
  direcciones_none: _DireccionFilter
  "Filters only those `Compania` for which all `direcciones`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `direcciones`-relation"
  direcciones_not: _DireccionFilter
  "Filters only those `Compania` for which exactly one `direcciones`-relationship matches this filter"
  direcciones_single: _DireccionFilter
  "Filters only those `Compania` for which at least one `direcciones`-relationship matches this filter"
  direcciones_some: _DireccionFilter
  fechaModificacion: LocalDateTime
  fechaModificacion_gt: LocalDateTime
  fechaModificacion_gte: LocalDateTime
  fechaModificacion_in: [LocalDateTime]
  fechaModificacion_lt: LocalDateTime
  fechaModificacion_lte: LocalDateTime
  fechaModificacion_not: LocalDateTime
  fechaModificacion_not_in: [LocalDateTime]
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
  "Filters only those `Compania` for which the `proveedorDel`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `proveedorDel`-relations"
  proveedorDel: _CompaniaFilter
  "@deprecated Use the `proveedorDel_not`-field"
  proveedorDel_none: _CompaniaFilter
  "Filters only those `Compania` for which the `proveedorDel`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `proveedorDel`-relation"
  proveedorDel_not: _CompaniaFilter
  "@deprecated Use the `proveedorDel`-field directly (without any suffix)"
  proveedorDel_single: _CompaniaFilter
  "@deprecated Use the `proveedorDel`-field directly (without any suffix)"
  proveedorDel_some: _CompaniaFilter
  "Filters only those `Compania` for which all `proveedores`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `proveedores`-relations"
  proveedores: _ProveedorFilter
  "Filters only those `Compania` for which all `proveedores`-relationships matches this filter"
  proveedores_every: _ProveedorFilter
  "Filters only those `Compania` for which none of the `proveedores`-relationships matches this filter"
  proveedores_none: _ProveedorFilter
  "Filters only those `Compania` for which all `proveedores`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `proveedores`-relation"
  proveedores_not: _ProveedorFilter
  "Filters only those `Compania` for which exactly one `proveedores`-relationship matches this filter"
  proveedores_single: _ProveedorFilter
  "Filters only those `Compania` for which at least one `proveedores`-relationship matches this filter"
  proveedores_some: _ProveedorFilter
  "Filters only those `Compania` for which the `sector`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `sector`-relations"
  sector: _SectorFilter
  "@deprecated Use the `sector_not`-field"
  sector_none: _SectorFilter
  "Filters only those `Compania` for which the `sector`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `sector`-relation"
  sector_not: _SectorFilter
  "@deprecated Use the `sector`-field directly (without any suffix)"
  sector_single: _SectorFilter
  "@deprecated Use the `sector`-field directly (without any suffix)"
  sector_some: _SectorFilter
  "Filters only those `Compania` for which the `subsidiaria`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `subsidiaria`-relations"
  subsidiaria: _CompaniaFilter
  "@deprecated Use the `subsidiaria_not`-field"
  subsidiaria_none: _CompaniaFilter
  "Filters only those `Compania` for which the `subsidiaria`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `subsidiaria`-relation"
  subsidiaria_not: _CompaniaFilter
  "@deprecated Use the `subsidiaria`-field directly (without any suffix)"
  subsidiaria_single: _CompaniaFilter
  "@deprecated Use the `subsidiaria`-field directly (without any suffix)"
  subsidiaria_some: _CompaniaFilter
  "Filters only those `Compania` for which all `subsidiarias`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `subsidiarias`-relations"
  subsidiarias: _CompaniaFilter
  "Filters only those `Compania` for which all `subsidiarias`-relationships matches this filter"
  subsidiarias_every: _CompaniaFilter
  "Filters only those `Compania` for which none of the `subsidiarias`-relationships matches this filter"
  subsidiarias_none: _CompaniaFilter
  "Filters only those `Compania` for which all `subsidiarias`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `subsidiarias`-relation"
  subsidiarias_not: _CompaniaFilter
  "Filters only those `Compania` for which exactly one `subsidiarias`-relationship matches this filter"
  subsidiarias_single: _CompaniaFilter
  "Filters only those `Compania` for which at least one `subsidiarias`-relationship matches this filter"
  subsidiarias_some: _CompaniaFilter
  "Filters only those `Compania` for which all `telefonos`-relationship matches this filter. If `null` is passed to this field, only those `Compania` will be filtered which has no `telefonos`-relations"
  telefonos: _TelefonoFilter
  "Filters only those `Compania` for which all `telefonos`-relationships matches this filter"
  telefonos_every: _TelefonoFilter
  "Filters only those `Compania` for which none of the `telefonos`-relationships matches this filter"
  telefonos_none: _TelefonoFilter
  "Filters only those `Compania` for which all `telefonos`-relationship does not match this filter. If `null` is passed to this field, only those `Compania` will be filtered which has any `telefonos`-relation"
  telefonos_not: _TelefonoFilter
  "Filters only those `Compania` for which exactly one `telefonos`-relationship matches this filter"
  telefonos_single: _TelefonoFilter
  "Filters only those `Compania` for which at least one `telefonos`-relationship matches this filter"
  telefonos_some: _TelefonoFilter
  usuarioModificacion: String
  usuarioModificacion_contains: String
  usuarioModificacion_ends_with: String
  usuarioModificacion_gt: String
  usuarioModificacion_gte: String
  usuarioModificacion_in: [String]
  usuarioModificacion_lt: String
  usuarioModificacion_lte: String
  usuarioModificacion_matches: String
  usuarioModificacion_not: String
  usuarioModificacion_not_contains: String
  usuarioModificacion_not_ends_with: String
  usuarioModificacion_not_in: [String]
  usuarioModificacion_not_starts_with: String
  usuarioModificacion_starts_with: String
}

input _DireccionFilter {
  AND: [_DireccionFilter!]
  NOT: [_DireccionFilter!]
  OR: [_DireccionFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  calle: String
  calle_contains: String
  calle_ends_with: String
  calle_gt: String
  calle_gte: String
  calle_in: [String]
  calle_lt: String
  calle_lte: String
  calle_matches: String
  calle_not: String
  calle_not_contains: String
  calle_not_ends_with: String
  calle_not_in: [String]
  calle_not_starts_with: String
  calle_starts_with: String
  ciudad: String
  ciudad_contains: String
  ciudad_ends_with: String
  ciudad_gt: String
  ciudad_gte: String
  ciudad_in: [String]
  ciudad_lt: String
  ciudad_lte: String
  ciudad_matches: String
  ciudad_not: String
  ciudad_not_contains: String
  ciudad_not_ends_with: String
  ciudad_not_in: [String]
  ciudad_not_starts_with: String
  ciudad_starts_with: String
  "Filters only those `Direccion` for which the `codigo`-relationship matches this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has no `codigo`-relations"
  codigo: _CodigoFilter
  "@deprecated Use the `codigo_not`-field"
  codigo_none: _CodigoFilter
  "Filters only those `Direccion` for which the `codigo`-relationship does not match this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has any `codigo`-relation"
  codigo_not: _CodigoFilter
  "@deprecated Use the `codigo`-field directly (without any suffix)"
  codigo_single: _CodigoFilter
  "@deprecated Use the `codigo`-field directly (without any suffix)"
  codigo_some: _CodigoFilter
  "Filters only those `Direccion` for which the `compania`-relationship matches this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has no `compania`-relations"
  compania: _CompaniaFilter
  "@deprecated Use the `compania_not`-field"
  compania_none: _CompaniaFilter
  "Filters only those `Direccion` for which the `compania`-relationship does not match this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has any `compania`-relation"
  compania_not: _CompaniaFilter
  "@deprecated Use the `compania`-field directly (without any suffix)"
  compania_single: _CompaniaFilter
  "@deprecated Use the `compania`-field directly (without any suffix)"
  compania_some: _CompaniaFilter
  "Filters only those `Direccion` for which the `municipio`-relationship matches this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has no `municipio`-relations"
  municipio: _MunicipioFilter
  "@deprecated Use the `municipio_not`-field"
  municipio_none: _MunicipioFilter
  "Filters only those `Direccion` for which the `municipio`-relationship does not match this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has any `municipio`-relation"
  municipio_not: _MunicipioFilter
  "@deprecated Use the `municipio`-field directly (without any suffix)"
  municipio_single: _MunicipioFilter
  "@deprecated Use the `municipio`-field directly (without any suffix)"
  municipio_some: _MunicipioFilter
  "Filters only those `Direccion` for which the `persona`-relationship matches this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has no `persona`-relations"
  persona: _PersonaFilter
  "@deprecated Use the `persona_not`-field"
  persona_none: _PersonaFilter
  "Filters only those `Direccion` for which the `persona`-relationship does not match this filter. If `null` is passed to this field, only those `Direccion` will be filtered which has any `persona`-relation"
  persona_not: _PersonaFilter
  "@deprecated Use the `persona`-field directly (without any suffix)"
  persona_single: _PersonaFilter
  "@deprecated Use the `persona`-field directly (without any suffix)"
  persona_some: _PersonaFilter
  tipo: String
  tipo_contains: String
  tipo_ends_with: String
  tipo_gt: String
  tipo_gte: String
  tipo_in: [String]
  tipo_lt: String
  tipo_lte: String
  tipo_matches: String
  tipo_not: String
  tipo_not_contains: String
  tipo_not_ends_with: String
  tipo_not_in: [String]
  tipo_not_starts_with: String
  tipo_starts_with: String
}

input _DirigeFilter {
  AND: [_DirigeFilter!]
  NOT: [_DirigeFilter!]
  OR: [_DirigeFilter!]
  "Filters only those `Dirige` for which the `from`-relationship matches this filter. If `null` is passed to this field, only those `Dirige` will be filtered which has no `from`-relations"
  from: _PersonaFilter
  "@deprecated Use the `from_not`-field"
  from_none: _PersonaFilter
  "Filters only those `Dirige` for which the `from`-relationship does not match this filter. If `null` is passed to this field, only those `Dirige` will be filtered which has any `from`-relation"
  from_not: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_single: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_some: _PersonaFilter
  idCompania: Int
  idCompania_gt: Int
  idCompania_gte: Int
  idCompania_in: [Int]
  idCompania_lt: Int
  idCompania_lte: Int
  idCompania_not: Int
  idCompania_not_in: [Int]
  nombreCompania: String
  nombreCompania_contains: String
  nombreCompania_ends_with: String
  nombreCompania_gt: String
  nombreCompania_gte: String
  nombreCompania_in: [String]
  nombreCompania_lt: String
  nombreCompania_lte: String
  nombreCompania_matches: String
  nombreCompania_not: String
  nombreCompania_not_contains: String
  nombreCompania_not_ends_with: String
  nombreCompania_not_in: [String]
  nombreCompania_not_starts_with: String
  nombreCompania_starts_with: String
  "Filters only those `Dirige` for which the `to`-relationship matches this filter. If `null` is passed to this field, only those `Dirige` will be filtered which has no `to`-relations"
  to: _AreaFilter
  "@deprecated Use the `to_not`-field"
  to_none: _AreaFilter
  "Filters only those `Dirige` for which the `to`-relationship does not match this filter. If `null` is passed to this field, only those `Dirige` will be filtered which has any `to`-relation"
  to_not: _AreaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_single: _AreaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_some: _AreaFilter
}

input _EmailAsignadoFilter {
  AND: [_EmailAsignadoFilter!]
  NOT: [_EmailAsignadoFilter!]
  OR: [_EmailAsignadoFilter!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String]
  email_lt: String
  email_lte: String
  email_matches: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String]
  email_not_starts_with: String
  email_starts_with: String
  "Filters only those `EmailAsignado` for which the `from`-relationship matches this filter. If `null` is passed to this field, only those `EmailAsignado` will be filtered which has no `from`-relations"
  from: _PersonaFilter
  "@deprecated Use the `from_not`-field"
  from_none: _PersonaFilter
  "Filters only those `EmailAsignado` for which the `from`-relationship does not match this filter. If `null` is passed to this field, only those `EmailAsignado` will be filtered which has any `from`-relation"
  from_not: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_single: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_some: _PersonaFilter
  "Filters only those `EmailAsignado` for which the `to`-relationship matches this filter. If `null` is passed to this field, only those `EmailAsignado` will be filtered which has no `to`-relations"
  to: _EmailFilter
  "@deprecated Use the `to_not`-field"
  to_none: _EmailFilter
  "Filters only those `EmailAsignado` for which the `to`-relationship does not match this filter. If `null` is passed to this field, only those `EmailAsignado` will be filtered which has any `to`-relation"
  to_not: _EmailFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_single: _EmailFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_some: _EmailFilter
}

input _EmailFilter {
  AND: [_EmailFilter!]
  NOT: [_EmailFilter!]
  OR: [_EmailFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  "Filters only those `Email` for which all `emails`-relationship matches this filter. If `null` is passed to this field, only those `Email` will be filtered which has no `emails`-relations"
  emails: _EmailAsignadoFilter
  "Filters only those `Email` for which all `emails`-relationships matches this filter"
  emails_every: _EmailAsignadoFilter
  "Filters only those `Email` for which none of the `emails`-relationships matches this filter"
  emails_none: _EmailAsignadoFilter
  "Filters only those `Email` for which all `emails`-relationship does not match this filter. If `null` is passed to this field, only those `Email` will be filtered which has any `emails`-relation"
  emails_not: _EmailAsignadoFilter
  "Filters only those `Email` for which exactly one `emails`-relationship matches this filter"
  emails_single: _EmailAsignadoFilter
  "Filters only those `Email` for which at least one `emails`-relationship matches this filter"
  emails_some: _EmailAsignadoFilter
  uri: String
  uri_contains: String
  uri_ends_with: String
  uri_gt: String
  uri_gte: String
  uri_in: [String]
  uri_lt: String
  uri_lte: String
  uri_matches: String
  uri_not: String
  uri_not_contains: String
  uri_not_ends_with: String
  uri_not_in: [String]
  uri_not_starts_with: String
  uri_starts_with: String
}

input _EstadoFilter {
  AND: [_EstadoFilter!]
  NOT: [_EstadoFilter!]
  OR: [_EstadoFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
  pais: String
  pais_contains: String
  pais_ends_with: String
  pais_gt: String
  pais_gte: String
  pais_in: [String]
  pais_lt: String
  pais_lte: String
  pais_matches: String
  pais_not: String
  pais_not_contains: String
  pais_not_ends_with: String
  pais_not_in: [String]
  pais_not_starts_with: String
  pais_starts_with: String
}

input _MunicipioFilter {
  AND: [_MunicipioFilter!]
  NOT: [_MunicipioFilter!]
  OR: [_MunicipioFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  "Filters only those `Municipio` for which the `codigo`-relationship matches this filter. If `null` is passed to this field, only those `Municipio` will be filtered which has no `codigo`-relations"
  codigo: _CodigoFilter
  "@deprecated Use the `codigo_not`-field"
  codigo_none: _CodigoFilter
  "Filters only those `Municipio` for which the `codigo`-relationship does not match this filter. If `null` is passed to this field, only those `Municipio` will be filtered which has any `codigo`-relation"
  codigo_not: _CodigoFilter
  "@deprecated Use the `codigo`-field directly (without any suffix)"
  codigo_single: _CodigoFilter
  "@deprecated Use the `codigo`-field directly (without any suffix)"
  codigo_some: _CodigoFilter
  "Filters only those `Municipio` for which all `codigos`-relationship matches this filter. If `null` is passed to this field, only those `Municipio` will be filtered which has no `codigos`-relations"
  codigos: _CodigoFilter
  "Filters only those `Municipio` for which all `codigos`-relationships matches this filter"
  codigos_every: _CodigoFilter
  "Filters only those `Municipio` for which none of the `codigos`-relationships matches this filter"
  codigos_none: _CodigoFilter
  "Filters only those `Municipio` for which all `codigos`-relationship does not match this filter. If `null` is passed to this field, only those `Municipio` will be filtered which has any `codigos`-relation"
  codigos_not: _CodigoFilter
  "Filters only those `Municipio` for which exactly one `codigos`-relationship matches this filter"
  codigos_single: _CodigoFilter
  "Filters only those `Municipio` for which at least one `codigos`-relationship matches this filter"
  codigos_some: _CodigoFilter
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
}

input _PaisFilter {
  AND: [_PaisFilter!]
  NOT: [_PaisFilter!]
  OR: [_PaisFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
}

input _PersonaFilter {
  AND: [_PersonaFilter!]
  NOT: [_PersonaFilter!]
  OR: [_PersonaFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  activo: Boolean
  activo_not: Boolean
  apellidoMaterno: String
  apellidoMaterno_contains: String
  apellidoMaterno_ends_with: String
  apellidoMaterno_gt: String
  apellidoMaterno_gte: String
  apellidoMaterno_in: [String]
  apellidoMaterno_lt: String
  apellidoMaterno_lte: String
  apellidoMaterno_matches: String
  apellidoMaterno_not: String
  apellidoMaterno_not_contains: String
  apellidoMaterno_not_ends_with: String
  apellidoMaterno_not_in: [String]
  apellidoMaterno_not_starts_with: String
  apellidoMaterno_starts_with: String
  apellidoPaterno: String
  apellidoPaterno_contains: String
  apellidoPaterno_ends_with: String
  apellidoPaterno_gt: String
  apellidoPaterno_gte: String
  apellidoPaterno_in: [String]
  apellidoPaterno_lt: String
  apellidoPaterno_lte: String
  apellidoPaterno_matches: String
  apellidoPaterno_not: String
  apellidoPaterno_not_contains: String
  apellidoPaterno_not_ends_with: String
  apellidoPaterno_not_in: [String]
  apellidoPaterno_not_starts_with: String
  apellidoPaterno_starts_with: String
  "Filters only those `Persona` for which all `direcciones`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `direcciones`-relations"
  direcciones: _DireccionFilter
  "Filters only those `Persona` for which all `direcciones`-relationships matches this filter"
  direcciones_every: _DireccionFilter
  "Filters only those `Persona` for which none of the `direcciones`-relationships matches this filter"
  direcciones_none: _DireccionFilter
  "Filters only those `Persona` for which all `direcciones`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `direcciones`-relation"
  direcciones_not: _DireccionFilter
  "Filters only those `Persona` for which exactly one `direcciones`-relationship matches this filter"
  direcciones_single: _DireccionFilter
  "Filters only those `Persona` for which at least one `direcciones`-relationship matches this filter"
  direcciones_some: _DireccionFilter
  "Filters only those `Persona` for which all `dirige`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `dirige`-relations"
  dirige: _DirigeFilter
  "Filters only those `Persona` for which the `dirigeDel`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `dirigeDel`-relations"
  dirigeDel: _AreaFilter
  "@deprecated Use the `dirigeDel_not`-field"
  dirigeDel_none: _AreaFilter
  "Filters only those `Persona` for which the `dirigeDel`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `dirigeDel`-relation"
  dirigeDel_not: _AreaFilter
  "@deprecated Use the `dirigeDel`-field directly (without any suffix)"
  dirigeDel_single: _AreaFilter
  "@deprecated Use the `dirigeDel`-field directly (without any suffix)"
  dirigeDel_some: _AreaFilter
  "Filters only those `Persona` for which all `dirige`-relationships matches this filter"
  dirige_every: _DirigeFilter
  "Filters only those `Persona` for which none of the `dirige`-relationships matches this filter"
  dirige_none: _DirigeFilter
  "Filters only those `Persona` for which all `dirige`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `dirige`-relation"
  dirige_not: _DirigeFilter
  "Filters only those `Persona` for which exactly one `dirige`-relationship matches this filter"
  dirige_single: _DirigeFilter
  "Filters only those `Persona` for which at least one `dirige`-relationship matches this filter"
  dirige_some: _DirigeFilter
  "Filters only those `Persona` for which the `emailDel`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `emailDel`-relations"
  emailDel: _EmailFilter
  "@deprecated Use the `emailDel_not`-field"
  emailDel_none: _EmailFilter
  "Filters only those `Persona` for which the `emailDel`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `emailDel`-relation"
  emailDel_not: _EmailFilter
  "@deprecated Use the `emailDel`-field directly (without any suffix)"
  emailDel_single: _EmailFilter
  "@deprecated Use the `emailDel`-field directly (without any suffix)"
  emailDel_some: _EmailFilter
  "Filters only those `Persona` for which all `emails`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `emails`-relations"
  emails: _EmailAsignadoFilter
  "Filters only those `Persona` for which all `emails`-relationships matches this filter"
  emails_every: _EmailAsignadoFilter
  "Filters only those `Persona` for which none of the `emails`-relationships matches this filter"
  emails_none: _EmailAsignadoFilter
  "Filters only those `Persona` for which all `emails`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `emails`-relation"
  emails_not: _EmailAsignadoFilter
  "Filters only those `Persona` for which exactly one `emails`-relationship matches this filter"
  emails_single: _EmailAsignadoFilter
  "Filters only those `Persona` for which at least one `emails`-relationship matches this filter"
  emails_some: _EmailAsignadoFilter
  estadoCivil: String
  estadoCivil_contains: String
  estadoCivil_ends_with: String
  estadoCivil_gt: String
  estadoCivil_gte: String
  estadoCivil_in: [String]
  estadoCivil_lt: String
  estadoCivil_lte: String
  estadoCivil_matches: String
  estadoCivil_not: String
  estadoCivil_not_contains: String
  estadoCivil_not_ends_with: String
  estadoCivil_not_in: [String]
  estadoCivil_not_starts_with: String
  estadoCivil_starts_with: String
  fechaModificacion: LocalDateTime
  fechaModificacion_gt: LocalDateTime
  fechaModificacion_gte: LocalDateTime
  fechaModificacion_in: [LocalDateTime]
  fechaModificacion_lt: LocalDateTime
  fechaModificacion_lte: LocalDateTime
  fechaModificacion_not: LocalDateTime
  fechaModificacion_not_in: [LocalDateTime]
  fechaNacimiento: LocalDate
  fechaNacimiento_gt: LocalDate
  fechaNacimiento_gte: LocalDate
  fechaNacimiento_in: [LocalDate]
  fechaNacimiento_lt: LocalDate
  fechaNacimiento_lte: LocalDate
  fechaNacimiento_not: LocalDate
  fechaNacimiento_not_in: [LocalDate]
  genero: String
  genero_contains: String
  genero_ends_with: String
  genero_gt: String
  genero_gte: String
  genero_in: [String]
  genero_lt: String
  genero_lte: String
  genero_matches: String
  genero_not: String
  genero_not_contains: String
  genero_not_ends_with: String
  genero_not_in: [String]
  genero_not_starts_with: String
  genero_starts_with: String
  idPersona: Int
  idPersona_gt: Int
  idPersona_gte: Int
  idPersona_in: [Int]
  idPersona_lt: Int
  idPersona_lte: Int
  idPersona_not: Int
  idPersona_not_in: [Int]
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
  "Filters only those `Persona` for which the `relacionDel`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `relacionDel`-relations"
  relacionDel: _PersonaFilter
  "@deprecated Use the `relacionDel_not`-field"
  relacionDel_none: _PersonaFilter
  "Filters only those `Persona` for which the `relacionDel`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `relacionDel`-relation"
  relacionDel_not: _PersonaFilter
  "@deprecated Use the `relacionDel`-field directly (without any suffix)"
  relacionDel_single: _PersonaFilter
  "@deprecated Use the `relacionDel`-field directly (without any suffix)"
  relacionDel_some: _PersonaFilter
  "Filters only those `Persona` for which all `relaciones`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `relaciones`-relations"
  relaciones: _RelacionFilter
  "Filters only those `Persona` for which all `relaciones`-relationships matches this filter"
  relaciones_every: _RelacionFilter
  "Filters only those `Persona` for which none of the `relaciones`-relationships matches this filter"
  relaciones_none: _RelacionFilter
  "Filters only those `Persona` for which all `relaciones`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `relaciones`-relation"
  relaciones_not: _RelacionFilter
  "Filters only those `Persona` for which exactly one `relaciones`-relationship matches this filter"
  relaciones_single: _RelacionFilter
  "Filters only those `Persona` for which at least one `relaciones`-relationship matches this filter"
  relaciones_some: _RelacionFilter
  "Filters only those `Persona` for which all `telefonos`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `telefonos`-relations"
  telefonos: _TelefonoFilter
  "Filters only those `Persona` for which all `telefonos`-relationships matches this filter"
  telefonos_every: _TelefonoFilter
  "Filters only those `Persona` for which none of the `telefonos`-relationships matches this filter"
  telefonos_none: _TelefonoFilter
  "Filters only those `Persona` for which all `telefonos`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `telefonos`-relation"
  telefonos_not: _TelefonoFilter
  "Filters only those `Persona` for which exactly one `telefonos`-relationship matches this filter"
  telefonos_single: _TelefonoFilter
  "Filters only those `Persona` for which at least one `telefonos`-relationship matches this filter"
  telefonos_some: _TelefonoFilter
  "Filters only those `Persona` for which all `trabaja`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `trabaja`-relations"
  trabaja: _TrabajaFilter
  "Filters only those `Persona` for which the `trabajaDel`-relationship matches this filter. If `null` is passed to this field, only those `Persona` will be filtered which has no `trabajaDel`-relations"
  trabajaDel: _CompaniaFilter
  "@deprecated Use the `trabajaDel_not`-field"
  trabajaDel_none: _CompaniaFilter
  "Filters only those `Persona` for which the `trabajaDel`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `trabajaDel`-relation"
  trabajaDel_not: _CompaniaFilter
  "@deprecated Use the `trabajaDel`-field directly (without any suffix)"
  trabajaDel_single: _CompaniaFilter
  "@deprecated Use the `trabajaDel`-field directly (without any suffix)"
  trabajaDel_some: _CompaniaFilter
  "Filters only those `Persona` for which all `trabaja`-relationships matches this filter"
  trabaja_every: _TrabajaFilter
  "Filters only those `Persona` for which none of the `trabaja`-relationships matches this filter"
  trabaja_none: _TrabajaFilter
  "Filters only those `Persona` for which all `trabaja`-relationship does not match this filter. If `null` is passed to this field, only those `Persona` will be filtered which has any `trabaja`-relation"
  trabaja_not: _TrabajaFilter
  "Filters only those `Persona` for which exactly one `trabaja`-relationship matches this filter"
  trabaja_single: _TrabajaFilter
  "Filters only those `Persona` for which at least one `trabaja`-relationship matches this filter"
  trabaja_some: _TrabajaFilter
  usuarioModificacion: String
  usuarioModificacion_contains: String
  usuarioModificacion_ends_with: String
  usuarioModificacion_gt: String
  usuarioModificacion_gte: String
  usuarioModificacion_in: [String]
  usuarioModificacion_lt: String
  usuarioModificacion_lte: String
  usuarioModificacion_matches: String
  usuarioModificacion_not: String
  usuarioModificacion_not_contains: String
  usuarioModificacion_not_ends_with: String
  usuarioModificacion_not_in: [String]
  usuarioModificacion_not_starts_with: String
  usuarioModificacion_starts_with: String
}

input _ProveedorFilter {
  AND: [_ProveedorFilter!]
  NOT: [_ProveedorFilter!]
  OR: [_ProveedorFilter!]
  "Filters only those `Proveedor` for which the `from`-relationship matches this filter. If `null` is passed to this field, only those `Proveedor` will be filtered which has no `from`-relations"
  from: _CompaniaFilter
  "@deprecated Use the `from_not`-field"
  from_none: _CompaniaFilter
  "Filters only those `Proveedor` for which the `from`-relationship does not match this filter. If `null` is passed to this field, only those `Proveedor` will be filtered which has any `from`-relation"
  from_not: _CompaniaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_single: _CompaniaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_some: _CompaniaFilter
  tipo: String
  tipo_contains: String
  tipo_ends_with: String
  tipo_gt: String
  tipo_gte: String
  tipo_in: [String]
  tipo_lt: String
  tipo_lte: String
  tipo_matches: String
  tipo_not: String
  tipo_not_contains: String
  tipo_not_ends_with: String
  tipo_not_in: [String]
  tipo_not_starts_with: String
  tipo_starts_with: String
  "Filters only those `Proveedor` for which the `to`-relationship matches this filter. If `null` is passed to this field, only those `Proveedor` will be filtered which has no `to`-relations"
  to: _CompaniaFilter
  "@deprecated Use the `to_not`-field"
  to_none: _CompaniaFilter
  "Filters only those `Proveedor` for which the `to`-relationship does not match this filter. If `null` is passed to this field, only those `Proveedor` will be filtered which has any `to`-relation"
  to_not: _CompaniaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_single: _CompaniaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_some: _CompaniaFilter
}

input _RelacionFilter {
  AND: [_RelacionFilter!]
  NOT: [_RelacionFilter!]
  OR: [_RelacionFilter!]
  "Filters only those `Relacion` for which the `from`-relationship matches this filter. If `null` is passed to this field, only those `Relacion` will be filtered which has no `from`-relations"
  from: _PersonaFilter
  "@deprecated Use the `from_not`-field"
  from_none: _PersonaFilter
  "Filters only those `Relacion` for which the `from`-relationship does not match this filter. If `null` is passed to this field, only those `Relacion` will be filtered which has any `from`-relation"
  from_not: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_single: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_some: _PersonaFilter
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
  tipo: String
  tipo_contains: String
  tipo_ends_with: String
  tipo_gt: String
  tipo_gte: String
  tipo_in: [String]
  tipo_lt: String
  tipo_lte: String
  tipo_matches: String
  tipo_not: String
  tipo_not_contains: String
  tipo_not_ends_with: String
  tipo_not_in: [String]
  tipo_not_starts_with: String
  tipo_starts_with: String
  "Filters only those `Relacion` for which the `to`-relationship matches this filter. If `null` is passed to this field, only those `Relacion` will be filtered which has no `to`-relations"
  to: _PersonaFilter
  "@deprecated Use the `to_not`-field"
  to_none: _PersonaFilter
  "Filters only those `Relacion` for which the `to`-relationship does not match this filter. If `null` is passed to this field, only those `Relacion` will be filtered which has any `to`-relation"
  to_not: _PersonaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_single: _PersonaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_some: _PersonaFilter
}

input _SectorFilter {
  AND: [_SectorFilter!]
  NOT: [_SectorFilter!]
  OR: [_SectorFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  "Filters only those `Sector` for which all `companias`-relationship matches this filter. If `null` is passed to this field, only those `Sector` will be filtered which has no `companias`-relations"
  companias: _CompaniaFilter
  "Filters only those `Sector` for which all `companias`-relationships matches this filter"
  companias_every: _CompaniaFilter
  "Filters only those `Sector` for which none of the `companias`-relationships matches this filter"
  companias_none: _CompaniaFilter
  "Filters only those `Sector` for which all `companias`-relationship does not match this filter. If `null` is passed to this field, only those `Sector` will be filtered which has any `companias`-relation"
  companias_not: _CompaniaFilter
  "Filters only those `Sector` for which exactly one `companias`-relationship matches this filter"
  companias_single: _CompaniaFilter
  "Filters only those `Sector` for which at least one `companias`-relationship matches this filter"
  companias_some: _CompaniaFilter
  fechaModificacion: LocalDateTime
  fechaModificacion_gt: LocalDateTime
  fechaModificacion_gte: LocalDateTime
  fechaModificacion_in: [LocalDateTime]
  fechaModificacion_lt: LocalDateTime
  fechaModificacion_lte: LocalDateTime
  fechaModificacion_not: LocalDateTime
  fechaModificacion_not_in: [LocalDateTime]
  nombre: String
  nombre_contains: String
  nombre_ends_with: String
  nombre_gt: String
  nombre_gte: String
  nombre_in: [String]
  nombre_lt: String
  nombre_lte: String
  nombre_matches: String
  nombre_not: String
  nombre_not_contains: String
  nombre_not_ends_with: String
  nombre_not_in: [String]
  nombre_not_starts_with: String
  nombre_starts_with: String
  usuarioModificacion: String
  usuarioModificacion_contains: String
  usuarioModificacion_ends_with: String
  usuarioModificacion_gt: String
  usuarioModificacion_gte: String
  usuarioModificacion_in: [String]
  usuarioModificacion_lt: String
  usuarioModificacion_lte: String
  usuarioModificacion_matches: String
  usuarioModificacion_not: String
  usuarioModificacion_not_contains: String
  usuarioModificacion_not_ends_with: String
  usuarioModificacion_not_in: [String]
  usuarioModificacion_not_starts_with: String
  usuarioModificacion_starts_with: String
}

input _TelefonoFilter {
  AND: [_TelefonoFilter!]
  NOT: [_TelefonoFilter!]
  OR: [_TelefonoFilter!]
  _id: ID
  _id_contains: ID
  _id_ends_with: ID
  _id_gt: ID
  _id_gte: ID
  _id_in: [ID]
  _id_lt: ID
  _id_lte: ID
  _id_matches: ID
  _id_not: ID
  _id_not_contains: ID
  _id_not_ends_with: ID
  _id_not_in: [ID]
  _id_not_starts_with: ID
  _id_starts_with: ID
  ciudad: String
  ciudad_contains: String
  ciudad_ends_with: String
  ciudad_gt: String
  ciudad_gte: String
  ciudad_in: [String]
  ciudad_lt: String
  ciudad_lte: String
  ciudad_matches: String
  ciudad_not: String
  ciudad_not_contains: String
  ciudad_not_ends_with: String
  ciudad_not_in: [String]
  ciudad_not_starts_with: String
  ciudad_starts_with: String
  "Filters only those `Telefono` for which the `compania`-relationship matches this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has no `compania`-relations"
  compania: _CompaniaFilter
  "@deprecated Use the `compania_not`-field"
  compania_none: _CompaniaFilter
  "Filters only those `Telefono` for which the `compania`-relationship does not match this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has any `compania`-relation"
  compania_not: _CompaniaFilter
  "@deprecated Use the `compania`-field directly (without any suffix)"
  compania_single: _CompaniaFilter
  "@deprecated Use the `compania`-field directly (without any suffix)"
  compania_some: _CompaniaFilter
  "Filters only those `Telefono` for which all `companias`-relationship matches this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has no `companias`-relations"
  companias: _CompaniaFilter
  "Filters only those `Telefono` for which all `companias`-relationships matches this filter"
  companias_every: _CompaniaFilter
  "Filters only those `Telefono` for which none of the `companias`-relationships matches this filter"
  companias_none: _CompaniaFilter
  "Filters only those `Telefono` for which all `companias`-relationship does not match this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has any `companias`-relation"
  companias_not: _CompaniaFilter
  "Filters only those `Telefono` for which exactly one `companias`-relationship matches this filter"
  companias_single: _CompaniaFilter
  "Filters only those `Telefono` for which at least one `companias`-relationship matches this filter"
  companias_some: _CompaniaFilter
  numero: String
  numero_contains: String
  numero_ends_with: String
  numero_gt: String
  numero_gte: String
  numero_in: [String]
  numero_lt: String
  numero_lte: String
  numero_matches: String
  numero_not: String
  numero_not_contains: String
  numero_not_ends_with: String
  numero_not_in: [String]
  numero_not_starts_with: String
  numero_starts_with: String
  "Filters only those `Telefono` for which the `persona`-relationship matches this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has no `persona`-relations"
  persona: _PersonaFilter
  "@deprecated Use the `persona_not`-field"
  persona_none: _PersonaFilter
  "Filters only those `Telefono` for which the `persona`-relationship does not match this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has any `persona`-relation"
  persona_not: _PersonaFilter
  "@deprecated Use the `persona`-field directly (without any suffix)"
  persona_single: _PersonaFilter
  "@deprecated Use the `persona`-field directly (without any suffix)"
  persona_some: _PersonaFilter
  "Filters only those `Telefono` for which all `personas`-relationship matches this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has no `personas`-relations"
  personas: _PersonaFilter
  "Filters only those `Telefono` for which all `personas`-relationships matches this filter"
  personas_every: _PersonaFilter
  "Filters only those `Telefono` for which none of the `personas`-relationships matches this filter"
  personas_none: _PersonaFilter
  "Filters only those `Telefono` for which all `personas`-relationship does not match this filter. If `null` is passed to this field, only those `Telefono` will be filtered which has any `personas`-relation"
  personas_not: _PersonaFilter
  "Filters only those `Telefono` for which exactly one `personas`-relationship matches this filter"
  personas_single: _PersonaFilter
  "Filters only those `Telefono` for which at least one `personas`-relationship matches this filter"
  personas_some: _PersonaFilter
  tipo: String
  tipo_contains: String
  tipo_ends_with: String
  tipo_gt: String
  tipo_gte: String
  tipo_in: [String]
  tipo_lt: String
  tipo_lte: String
  tipo_matches: String
  tipo_not: String
  tipo_not_contains: String
  tipo_not_ends_with: String
  tipo_not_in: [String]
  tipo_not_starts_with: String
  tipo_starts_with: String
}

input _TrabajaFilter {
  AND: [_TrabajaFilter!]
  NOT: [_TrabajaFilter!]
  OR: [_TrabajaFilter!]
  "Filters only those `Trabaja` for which the `from`-relationship matches this filter. If `null` is passed to this field, only those `Trabaja` will be filtered which has no `from`-relations"
  from: _PersonaFilter
  "@deprecated Use the `from_not`-field"
  from_none: _PersonaFilter
  "Filters only those `Trabaja` for which the `from`-relationship does not match this filter. If `null` is passed to this field, only those `Trabaja` will be filtered which has any `from`-relation"
  from_not: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_single: _PersonaFilter
  "@deprecated Use the `from`-field directly (without any suffix)"
  from_some: _PersonaFilter
  puesto: String
  puesto_contains: String
  puesto_ends_with: String
  puesto_gt: String
  puesto_gte: String
  puesto_in: [String]
  puesto_lt: String
  puesto_lte: String
  puesto_matches: String
  puesto_not: String
  puesto_not_contains: String
  puesto_not_ends_with: String
  puesto_not_in: [String]
  puesto_not_starts_with: String
  puesto_starts_with: String
  "Filters only those `Trabaja` for which the `to`-relationship matches this filter. If `null` is passed to this field, only those `Trabaja` will be filtered which has no `to`-relations"
  to: _CompaniaFilter
  "@deprecated Use the `to_not`-field"
  to_none: _CompaniaFilter
  "Filters only those `Trabaja` for which the `to`-relationship does not match this filter. If `null` is passed to this field, only those `Trabaja` will be filtered which has any `to`-relation"
  to_not: _CompaniaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_single: _CompaniaFilter
  "@deprecated Use the `to`-field directly (without any suffix)"
  to_some: _CompaniaFilter
}
